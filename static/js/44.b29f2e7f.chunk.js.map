{"version":3,"file":"static/js/44.b29f2e7f.chunk.js","mappings":"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","sources":["Components/PasswordGenerator.js"],"sourcesContent":["// src/components/PasswordGenerator.jsx\r\nimport { useState } from \"react\";\r\nimport \"../Styles/PasswordGenerator.css\";\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function PasswordGenerator() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [length, setLength] = useState(12);\r\n  const [includeUppercase, setIncludeUppercase] = useState(true);\r\n  const [includeLowercase, setIncludeLowercase] = useState(true);\r\n  const [includeNumbers, setIncludeNumbers] = useState(true);\r\n  const [includeSymbols, setIncludeSymbols] = useState(true);\r\n  const { dismiss } = toast;\r\n\r\n  const generatePassword = () => {\r\n    let charset = \"\";\r\n    if (includeUppercase) charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    if (includeLowercase) charset += \"abcdefghijklmnopqrstuvwxyz\";\r\n    if (includeNumbers) charset += \"0123456789\";\r\n    if (includeSymbols) charset += \"!@#$%^&*()_+{}[]|:;<>,.?/~\";\r\n\r\n    let newPassword = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n      newPassword += charset.charAt(Math.floor(Math.random() * charset.length));\r\n    }\r\n    setPassword(newPassword);\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    dismiss(); // Dismiss any existing toast notifications\r\n    if (!password) return toast.error(\"Nothing to copy\", { theme: \"dark\" });\r\n    navigator.clipboard.writeText(password);\r\n    toast.success(\"Password copied !!!\", { theme: \"dark\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"password-generator\">\r\n          <h2>Password Generator</h2>\r\n          <div className=\"password-display\">\r\n            <input\r\n              type=\"text\"\r\n              value={password}\r\n              readOnly\r\n              placeholder=\"Your secure password\"\r\n            />\r\n            <button onClick={copyToClipboard}>Copy</button>\r\n          </div>\r\n\r\n          <div className=\"controls\">\r\n            <div className=\"control\">\r\n              <label>Password Length: {length}</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"8\"\r\n                max=\"32\"\r\n                value={length}\r\n                onChange={(e) => setLength(Number(e.target.value))}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={includeUppercase}\r\n                  onChange={(e) => setIncludeUppercase(e.target.checked)}\r\n                />\r\n                Include Uppercase\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={includeLowercase}\r\n                  onChange={(e) => setIncludeLowercase(e.target.checked)}\r\n                />\r\n                Include Lowercase\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={includeNumbers}\r\n                  onChange={(e) => setIncludeNumbers(e.target.checked)}\r\n                />\r\n                Include Numbers\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={includeSymbols}\r\n                  onChange={(e) => setIncludeSymbols(e.target.checked)}\r\n                />\r\n                Include Symbols\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"generate-button\" onClick={generatePassword}>\r\n            Generate Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        transition={Zoom}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["PasswordGenerator","password","setPassword","useState","length","setLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","dismiss","toast","_jsxs","_Fragment","children","_jsx","className","type","value","readOnly","placeholder","onClick","copyToClipboard","error","theme","navigator","clipboard","writeText","success","min","max","onChange","e","Number","target","checked","generatePassword","charset","newPassword","i","charAt","Math","floor","random","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Zoom"],"sourceRoot":""}