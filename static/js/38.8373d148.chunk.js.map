{"version":3,"file":"static/js/38.8373d148.chunk.js","mappings":"qKAIA,MAAM,QAAEA,GAAYC,EAAAA,GAoHpB,EAlHiBC,KACf,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC7BC,GAAeC,EAAAA,EAAAA,QAAO,MAYtBC,EAAeC,IAEnB,MAIMC,EAJaD,EAASE,QAAQC,GAClCA,EAAKC,KAAKC,WAAW,YAGaC,KAAKH,IAAI,CAC3CA,OACAI,QAASC,IAAIC,gBAAgBN,OAGzBO,EAAgB,IAAIhB,KAAUO,GAEhCS,EAAcC,OAAS,IACzBpB,IACAC,EAAAA,GAAMoB,MAAM,uCAAwC,CAClDC,MAAO,SAETlB,EAASe,EAAcI,MAAM,EAAG,MAEhCnB,EAASe,EACX,EAqBF,OACEK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBF,EAAAA,EAAAA,MAAA,OACEI,UAAU,WACVC,OAzDYC,IAClBA,EAAMC,iBACN,MAAMC,EAAeC,MAAMC,KAAKJ,EAAMK,aAAahC,OACnDK,EAAYwB,EAAa,EAuDnBI,WApDgBN,IACtBA,EAAMC,gBAAgB,EAoDhBM,QAhBYC,KAClBhC,EAAaiC,QAAQC,OAAO,EAeDd,SAAA,CACtB,yEAECC,EAAAA,EAAAA,KAAA,SACEd,KAAK,OACL4B,IAAKnC,EACLoC,MAAO,CAAEC,QAAS,QAClBC,UAAQ,EACRC,OAAO,UACPC,SArBgBhB,IACxB,MAAMiB,EAAgBd,MAAMC,KAAKJ,EAAMkB,OAAO7C,OAC9CK,EAAYuC,EAAc,KAqBpBpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,SACrCvB,EAAMY,KAAI,CAACkC,EAASC,KACnB1B,EAAAA,EAAAA,MAAA,OAAiBI,UAAU,gBAAeF,SAAA,EAChC,OAAPuB,QAAO,IAAPA,OAAO,EAAPA,EAASjC,WACRW,EAAAA,EAAAA,KAAA,OACEwB,IAAKF,EAAQjC,QACboC,IAAKH,EAAQrC,KAAKyC,MAAQ,WAG9B1B,EAAAA,EAAAA,KAAA,UACEU,QAAUiB,IACRA,EAAEC,kBA/CEL,KACpB,MAAMM,EAAe,IAAIrD,GACrBqD,EAAaN,KACfjC,IAAIwC,gBAAgBD,EAAaN,GAAOlC,SACxCwC,EAAaE,OAAOR,EAAO,GAC3B9C,EAASoD,GACX,EA0CgBG,CAAaT,EAAM,EAErBtB,UAAU,gBAAeF,SAC1B,WAbOwB,aAqBlBvB,EAAAA,EAAAA,KAACiC,EAAAA,GAAc,CACbC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZ/C,MAAM,QACNgD,WAAYC,EAAAA,OAEb,C","sources":["Components/DropzoneComponent.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"../Styles/DropzoneComponent.css\"; // Import the CSS file\r\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst { dismiss } = toast;\r\n\r\nconst Dropzone = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const droppedFiles = Array.from(event.dataTransfer.files);\r\n    handleFiles(droppedFiles);\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleFiles = (newFiles) => {\r\n    // Filter only image files and create preview URLs\r\n    const imageFiles = newFiles.filter((file) =>\r\n      file.type.startsWith(\"image/\")\r\n    );\r\n\r\n    const filesWithPreview = imageFiles.map((file) => ({\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n    }));\r\n\r\n    const combinedFiles = [...files, ...filesWithPreview];\r\n\r\n    if (combinedFiles.length > 10) {\r\n      dismiss(); // Dismiss any existing toast notifications\r\n      toast.error(`You can only upload up to 10 images.`, {\r\n        theme: \"dark\",\r\n      });\r\n      setFiles(combinedFiles.slice(0, 10));\r\n    } else {\r\n      setFiles(combinedFiles);\r\n    }\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedFiles = [...files];\r\n    if (updatedFiles[index]) {\r\n      URL.revokeObjectURL(updatedFiles[index].preview); // Free memory\r\n      updatedFiles.splice(index, 1);\r\n      setFiles(updatedFiles);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = Array.from(event.target.files);\r\n    handleFiles(selectedFiles);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"dropzone\"\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onClick={handleClick}\r\n        >\r\n          Drag & Drop image files here or click to select files (Max 10 images)\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            style={{ display: \"none\" }}\r\n            multiple\r\n            accept=\"image/*\"\r\n            onChange={handleFileChange}\r\n          />\r\n          <div className=\"image-preview-container\">\r\n            {files.map((fileObj, index) => (\r\n              <div key={index} className=\"image-preview\">\r\n                {fileObj?.preview && (\r\n                  <img\r\n                    src={fileObj.preview}\r\n                    alt={fileObj.file.name || \"image\"}\r\n                  />\r\n                )}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleDelete(index);\r\n                  }}\r\n                  className=\"delete-button\"\r\n                >\r\n                  &times;\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        transition={Zoom}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropzone;\r\n"],"names":["dismiss","toast","Dropzone","files","setFiles","useState","fileInputRef","useRef","handleFiles","newFiles","filesWithPreview","filter","file","type","startsWith","map","preview","URL","createObjectURL","combinedFiles","length","error","theme","slice","_jsxs","_Fragment","children","_jsx","className","onDrop","event","preventDefault","droppedFiles","Array","from","dataTransfer","onDragOver","onClick","handleClick","current","click","ref","style","display","multiple","accept","onChange","selectedFiles","target","fileObj","index","src","alt","name","e","stopPropagation","updatedFiles","revokeObjectURL","splice","handleDelete","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Zoom"],"sourceRoot":""}